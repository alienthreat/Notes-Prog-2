#ifndef _WIN32
# define _WIN32
#endif
#include <iostream>
#include <cstdlib>
#include "CSYSTEM/csystem.h" // Libreria para multiplataforma.
using namespace std;

/*
Un comercio desea realizar una esadística sobre las ventas en sus
5 sucursales durante el mes de enero.
Cada venta está registrada econ los siguientes datos:
_Sucursal (Pacheco", "Tigre", "Torcuato", "Talar, "Rincón").
_Día(int)
_Importe(float)
Mostrar:
a)Importe recaudado cada día en cada sucursal.
b)La sucursal que más recaudó la primer semana.
c)La cantidad de días con ventas menores a $12000 entre
todas las sucursales.
d)Finalizar la carga de datos mediante día de venta =0;
*/










//PROTOTIPOS
void ponerCeroMatriz(float matImportes[5][31], int fila, int columna);
int CargarDatos(float matImportes[5][31]) ;
int BuscarPosicion(char *posicion);
void puntoA(float matImportes[5][31],int fila, int columna); //Indico tipo de dato a recibir y dimensión
void puntoB(float matImportes[5][31],int fila, int columna); //por cada vez que realizo un prototipo
int puntoC(float matImportes[5][31],int fila, int columna); //de funcion o cuando la crea
int sumaSem(float matImportes[5][31], int maximport, int maxsuc, int suc);
void mostrarSuc(int maxsuc);

int main() {
	float matImportes[5][31];
	ponerCeroMatriz(matImportes, 5, 31);
	int salir;
	while(salir!=0)
    {
    system("cls");
	salir = CargarDatos(matImportes);
    }
	puntoA(matImportes, 5, 31);
	cout<<" ";
	cout<<" ";
	puntoB(matImportes, 5, 31);
	cout<<" ";
	cout<<" ";
	puntoC(matImportes, 5, 31);
	return 0;
}

//Al usar la función solo paso los parámetros
void ponerCeroMatriz(float matImportes[5][31], int fila, int columna)
{
	int i, j;
	for (i = 0; i < fila; i++)
		for (j = 0; j < columna; j++)
			matImportes[i][j] = 0;
}
	int CargarDatos(float matImportes[5][31])
	{
		int dia, fila;
		float importe;
		char sucursal[9];
		cout << "sucursal:" ;
		cin >> sucursal;
		cout << "Importe:";
		cin >> importe;
		cout << "DIA:";
		cin >> dia;
		fila = BuscarPosicion(sucursal);
		matImportes[fila][dia - 1] += importe;
		return dia;
	}

int BuscarPosicion(char *sucursal) {
	if(strcmp(sucursal, "PACHECO") == 0) return 0;
	if(strcmp(sucursal, "TIGRE") == 0) return 1;
	if(strcmp(sucursal, "TORCUATO") == 0) return 2;
	if(strcmp(sucursal, "TALAR") == 0) return 3;
	if(strcmp(sucursal, "RINCON") == 0) return 4;
}

void mostrarSuc(int maxsuc) {
    switch(maxsuc)
    {
    case 0:
        {
        cout<<"PACHECO";
        }break;
    case 1:
        {
        cout<<"TIGRE";
        }break;
    case 2:
        {
        cout<<"TORCUATO";
        }break;
    case 3:
        {
        cout<<"TALAR";
        }break;
    case 4:
        {
        cout<<"RINCON";
        }break;
    }
}

//Importe recaudado en cada día en cada sucursal
void puntoA(float matImportes[5][31], int fila, int columna){
	int i, j;
	for (i = 0; i < fila; i++)
	{
		for (j = 0; j < columna; j++)
		{
			cout<<"DIA:"<<j+1<<" IMPORTE: "<<matImportes[i][j];
		}
		cout<<" "<<endl;
	}
}

void puntoB(float matImportes[5][31],int fila, int columna)
{
	int k,maxsuc,maximport=0;
	for(k=0;k<5;k++)
    {
            maxsuc=sumaSem(matImportes, maximport, maxsuc, k);
	}
	mostrarSuc(maxsuc); //Falta función que muestre
}

int sumaSem(float matImportes[5][31],int maximport, int maxsuc, int suc)
{
	float sumimport;
	for(int k=0;k<7;k++)
	{
		sumimport += matImportes[suc][k];
	};
	if (sumimport>=maximport) maximport=sumimport;
	maxsuc=suc;
return suc;
}

int puntoC(float matImportes[5][31],int fila, int columna)
{
	int cont=0;
		int i, j;
	for (i = 0; i < fila; i++)
	{
		for (j = 0; j < columna; j++)
			if(matImportes[i][j]<12000)
			{
				cont++;
			}
	}
 return cont;
}
